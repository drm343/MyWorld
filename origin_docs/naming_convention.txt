/**
 * @page 命名規範
 *
 * @tableofcontents
 *
 * @section 命名規範
 *
 * @note
   如果程式中有不符規範的地方，可能是舊版的程式碼，需要重構程式碼跟文件。
 *
 * @subsection Access
 *
 * 只有透過 typedef 重新命名的結構能在最後方加上 _Access，也只有這種狀況下才能命名為 _Access。
 *
 * @subsection Object_Access
 *
 * 結構如果出現 ** 的地方，請 typedef 改成 _Object_Access，避免太多星號導致程式碼難以 debug 或閱讀。
 *
 * @subsection Namespace
 *
 * 利用 macro 做 namespace，請在 namespace.h 中加入定義。
 *
 * 程式中寫 EXPORT 的都代表該函數對外開放，之後為了統一命名空間，會將 EXPORT
   轉換為相對應的 namespace macro。
 *
 * @subsection API
 *
 * 程式中凡是以 API 做結尾的，都是早期的設計，將會被重構，請儘量不要使用。
 *
 * 若文件中有提到 API，則代表函數的意思。
 *
 * @subsection 內部使用的函數
 *
 * 凡是不對外公開的內部 API，一律使用 static。
 *
 * @subsection 對外公開的函數
 *
 * 對外公開的 API 都必須加上 Namespace。
 */
